name: CI_ACTION

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: 20.x
  MONGO_URI: mongodb://localhost:27017/mnnn-test

jobs:
  backend:
    name: NestJS Backend
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'" --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
    - uses: actions/checkout@v4

    - name: Verify package-lock.json exists
      working-directory: ./backend
      run: |
        if [ ! -f package-lock.json ]; then
          if [ -f package.json ]; then
            echo "package-lock.json not found! Generating from package.json..."
            npm install
          else
            echo "Neither package-lock.json nor package.json found. Skipping..."
            exit 1
          fi
        fi

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test
      env:
        DATABASE_URL: ${{ env.MONGO_URI }}
        NODE_ENV: test

  frontend:
    name: Next.js Frontend
    needs: backend
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Verify package-lock.json exists
      working-directory: ./frontend
      run: npm install
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build project
      working-directory: ./frontend
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:3000' }}
      run: npm run build
